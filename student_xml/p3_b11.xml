<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="../schema_3302.rng" type="application/xml" schematypens="http://relaxng.org/ns/structure/1.0"?>
<!--the second line in the document associates the schema, so be sure not to change it-->
<DOC>
    <docHead>
        <!--required header includes metadata about the assignment (title, author, version)-->
        <title>Project 3: Penetration Testing Edutainment</title>
        <author xml:id="b11">Seth Bakes</author>
        <version n="num_of_version" date="2016-01-01"/>
    </docHead>
    
    <blog_post>
        <background>
            <section_header>What is Penetration Testing?</section_header>
            <technical_principle n="1"> Penetration testing is what you might call
                ethical hacking. Now hacking is a large and arguably misused term, 
                but it is the best term we have. Penetration testing involves an 
                individual, team, or software, actively analysing a system for 
                vulnerabilities. This takes can take many forms, which we will get into
                later, many of which are not what you might think of as "hacking". There is
                always a written consent by the party, almost always with a payment involved,
                making penetration testing a service, sought after by those looking to improve
                the security of whatever property or infrastructure they have.
                
                <!-- Insert cringy hacker image -->
                
             <misconception n="1">"Hacking", the wildly used term that it is, will be defined thus:
                 "a person interfering with another system without permission from the system owner". 
                 The first thought that comes to mind is someone in a dark basement typing line after
                 line into an arbitrary command prompt. This media portrayal, while cool, is misleading.
                 Lot of "hacking" and most commonly seen cases of what most of us may call hacking, is
                 more appropriately scamming, or misleading a human into giving up their valuable information. 
                 Actual attempts to penetrate a system often involve very methodical approaches, not really the
                 highspeed action that we see in movies. Successful penetration of a system is what you would
                 call genuine hacking, usually accompanied with the stealing of sensitive information.
             </misconception>
                
                <!-- Insert examples: Steam forums, Sony Pictures, Team Viewer-->
                
            </technical_principle>
            
            <section_header> How do you "penetrate" a system?</section_header>
            <technical_principle n="2">The main purpose of penetration testing is
                to identify vulnerabilities. These vulnerabilities, are then tested, and
                a penetration tester usually offers a solution along with identifying the
                problem. Generally speaking a vulnerability is a security "hole". This means it
                offers a way for an outside entity to gain access into the system, this most
                commonly manifests as weak passwords, but can also take much more complex routes
                such as database interactions flaws. These vulnerabilities are exactly what penetration
                testers are hired to find. 
                
                <!-- Image for SQL injection, Format String vulnerability-->
                
                <!-- More technical explaination of vulnerabilities -->
                
                <!-- Insert examples: heartbleed bug, flashplayer feedback exploit -->
            </technical_principle>
            
            <section_header> So what can you do with a vulnerability?</section_header>
            <technical_principle n="3'"> After gaining access to a system, you need to find
                or develop a way to take advantage of it. This is typically called an "exploit".
                Exploits allow you deliver a payload. Now this can be confusing but here is a great analogy: Think of
                a payload as a warhead, and an exploit as your propulsion system. Together you have a missile,
                but they are both rather useless alone. (credit to user "NULLZ" from security.stackexchange.com). 
                
                <!-- Insert payload & exploit diagram (from user "NULLZ")-->
                
                So a payload is software that uses an exploit to gain access to a system. This can
                take different forms, there are completely independent payloads, that you cannot interact
                with once injected into a system. A staged payload, for example, established a communication
                channel between the hacker and the targeted system. This kind of payload gives the penetration 
                tester control over his program by feeding remote commands. Getting into why you would
                use different kinds of payloads is a bit beyond this blog post but it is mostly about
                what kind of system your using and any traces you leave behind for digital forensic investigation. 
            </technical_principle>
            
            <technical_principle n="4"> Metasploit
                
            </technical_principle>
            
       
            
            <section_header> Penetration testing as a career</section_header>
            
            
        </background>
        
        <answer></answer>
        <sources></sources>
    </blog_post>
    
    <docReview>
        <reviewer type="peer" xml:id="peer_id_here"/>
        <report type="peer" resp="#peer_id_here">
            <p>Peer review report will appear here.</p>
        </report>
        <reviewer type="instructor" xml:id="kgs"/>
        <report type="instructor" resp="#kgs">
            <p>Comments on assignment will appear here.</p>
        </report>
    </docReview>
</DOC>